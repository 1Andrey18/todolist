{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3de47834\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bg-yellow-500 min-h-screen flex flex-col items-center\"\n};\nconst _hoisted_2 = {\n  class: \"bg-yellow-500 p-5 w-80 mx-auto text-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-4xl font-bold mb-5\"\n}, \"TO-DO\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskForm = _resolveComponent(\"TaskForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showAddTask = true),\n    class: \"bg-transparent border-2 border-black rounded-full w-8 h-8 text-2xl mb-5\"\n  }, \"+\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"bg-black text-yellow-500 p-3 my-2 flex justify-between items-center\"\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'line-through': task.done\n      })\n    }, _toDisplayString(task.text), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.done = $event,\n      class: \"form-checkbox mr-2\"\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, task.done]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeTask(task.id),\n      class: \"text-red-500 font-bold\"\n    }, \"X\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.showAddTask ? (_openBlock(), _createBlock(_component_TaskForm, {\n    key: 0,\n    onAddTask: $options.addTask,\n    onClose: _cache[1] || (_cache[1] = $event => $data.showAddTask = false)\n  }, null, 8 /* PROPS */, [\"onAddTask\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","$event","$data","showAddTask","_Fragment","_renderList","tasks","task","key","id","_normalizeClass","done","text","type","_hoisted_4","$options","removeTask","_hoisted_5","_createBlock","_component_TaskForm","onAddTask","addTask","onClose","_createCommentVNode"],"sources":["C:\\Users\\BY-FARIKS\\todo-list\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg-yellow-500 min-h-screen flex flex-col items-center\">\r\n      <div class=\"bg-yellow-500 p-5 w-80 mx-auto text-center\">\r\n        <h1 class=\"text-4xl font-bold mb-5\">TO-DO</h1>\r\n        <button @click=\"showAddTask = true\" class=\"bg-transparent border-2 border-black rounded-full w-8 h-8 text-2xl mb-5\">+</button>\r\n        <div v-for=\"task in tasks\" :key=\"task.id\" class=\"bg-black text-yellow-500 p-3 my-2 flex justify-between items-center\">\r\n          <span :class=\"{ 'line-through': task.done }\">{{ task.text }}</span>\r\n          <div>\r\n            <input type=\"checkbox\" v-model=\"task.done\" class=\"form-checkbox mr-2\" />\r\n            <button @click=\"removeTask(task.id)\" class=\"text-red-500 font-bold\">X</button>\r\n          </div>\r\n        </div>\r\n        <TaskForm v-if=\"showAddTask\" @add-task=\"addTask\" @close=\"showAddTask = false\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import TaskForm from './TaskForm.vue';\r\n  \r\n  export default {\r\n    name: 'TodoList',\r\n    components: {\r\n      TaskForm\r\n    },\r\n    data() {\r\n      return {\r\n        tasks: [],\r\n        showAddTask: false\r\n      };\r\n    },\r\n    methods: {\r\n      addTask(task) {\r\n        this.tasks.push({ id: Date.now(), text: task, done: false });\r\n        this.showAddTask = false;\r\n      },\r\n      removeTask(taskId) {\r\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .line-through {\r\n    text-decoration: line-through;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAuD;;EAC3DA,KAAK,EAAC;AAA4C;gEACrDC,mBAAA,CAA8C;EAA1CD,KAAK,EAAC;AAAyB,GAAC,OAAK;mBAHjD;mBAAA;;;uBACIE,mBAAA,CAaM,OAbNC,UAaM,GAZJF,mBAAA,CAWM,OAXNG,UAWM,GAVJC,UAA8C,EAC9CJ,mBAAA,CAA8H;IAArHK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,WAAW;IAASV,KAAK,EAAC;KAA0E,GAAC,I,kBACrHE,mBAAA,CAMMS,SAAA,QAXdC,WAAA,CAK4BH,KAAA,CAAAI,KAAK,EAAbC,IAAI;yBAAhBZ,mBAAA,CAMM;MANsBa,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEhB,KAAK,EAAC;QAC9CC,mBAAA,CAAmE;MAA5DD,KAAK,EANtBiB,eAAA;QAAA,gBAM0CH,IAAI,CAACI;MAAI;wBAAOJ,IAAI,CAACK,IAAI,yBACzDlB,mBAAA,CAGM,c,gBAFJA,mBAAA,CAAwE;MAAjEmB,IAAI,EAAC,UAAU;MARlC,uBAAAZ,MAAA,IAQ4CM,IAAI,CAACI,IAAI,GAAAV,MAAA;MAAER,KAAK,EAAC;4BAR7DqB,UAAA,I,kBAQ4CP,IAAI,CAACI,IAAI,E,GACzCjB,mBAAA,CAA8E;MAArEK,OAAK,EAAAE,MAAA,IAAEc,QAAA,CAAAC,UAAU,CAACT,IAAI,CAACE,EAAE;MAAGhB,KAAK,EAAC;OAAyB,GAAC,iBATjFwB,UAAA,E;kCAYwBf,KAAA,CAAAC,WAAW,I,cAA3Be,YAAA,CAAgFC,mBAAA;IAZxFX,GAAA;IAYsCY,SAAQ,EAAEL,QAAA,CAAAM,OAAO;IAAGC,OAAK,EAAAtB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,WAAW;4CAZ5EoB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}